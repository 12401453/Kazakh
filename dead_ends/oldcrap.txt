meanings = Object.create(null);
  if(display_word != null) delAnnotate();
  display_word = event.target;
  tokno_current = display_word.dataset.tokno;
  word_engine_id = display_word.dataset.word_engine_id;
  console.log(word_engine_id);

  display_word.onclick = "";
  display_word.classList.add("tooltip_selected");
  display_word.classList.remove("tooltip");

  const httpRequest = (method, url) => {

    let send_data = "word_engine_id="+word_engine_id+"&tokno_current="+tokno_current+"&lang_id="+lang_id;

    const xhttp = new XMLHttpRequest();
    xhttp.open(method, url, true);
    xhttp.responseType = 'json';
    xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

    xhttp.onload = () => {
      console.log("sent");
    // console.log(xhttp.responseText);
      if(xhttp.readyState == 4)  {

        let json_response = xhttp.response;
        let lemma_tag_content = json_response.lemma_tag_content;
        lemma_form_tag_initial = lemma_tag_content;
        let lemma_textarea_content = json_response.lemma_textarea_content;
        lemma_textarea_content_initial = lemma_textarea_content;
        //let lemma_textarea_content_html = json_response.lemma_textarea_content_html;
        lemma_meaning_no = Number(json_response.lemma_meaning_no);
        lemma_id = Number(json_response.lemma_id);
        pos = Number(json_response.pos);
        pos_initial = pos;

        if(lemma_meaning_no != 0) {
          meanings[lemma_meaning_no] = lemma_textarea_content;
        }
        else {
          lemma_meaning_no = 1;
        }


        if(document.getElementById('annot_box') != null) {
          let annot_box = document.getElementById('annot_box');
          annot_box.remove();
        }

        displayAnnotBox();
        document.getElementById('pos_tag_box').innerHTML = choosePoS(pos);
        document.getElementById("number").innerHTML = lemma_meaning_no;
        document.getElementById('lemma_tag').value = lemma_tag_content;
        document.getElementById('lemma_textarea').value = lemma_textarea_content; //might be able to get rid of _html versions on back and frontend doing it this way

        document.getElementById('lemma_tag').focus();

        if(lemma_meaning_no == 1) {
          document.getElementById("meaning_leftarrow").classList.add("nav_arrow_deactiv");
          document.getElementById("meaning_leftarrow").classList.remove("nav_arrow");
        }
        else if (lemma_meaning_no == 10) {
          document.getElementById("meaning_rightarrow").classList.add("nav_arrow_deactiv");
          document.getElementById("meaning_rightarrow").classList.remove("nav_arrow");
        }

        if(lemma_id == 0) {
          document.getElementById('delete_lemma_button').style.display = "none";
        }
        document.getElementById('delete_lemma_button').onclick = lemmaDelete;

        document.getElementById('disregard_button').onclick = disRegard;
        document.getElementById('save_button').onclick = lemmaRecord;
        document.getElementById('meaning_leftarrow').onclick = switchMeaning;
        document.getElementById('meaning_rightarrow').onclick = switchMeaning;
        document.getElementById('lemma_tag').onblur = pullInLemma;

        document.getElementById("lemma_box").classList.add("current_box");
        let current_box = document.querySelector('.current_box');

        let left_column = document.getElementById('left_column');

        function selectBox(box) {
          if (current_box) {
            current_box.classList.remove("current_box");
          }
          current_box = box;
          current_box.classList.add("current_box");

          if(current_box.id == "lemma_box") {
            document.getElementById("right_body").style.visibility = "visible";
            document.getElementById("right_footer").style.visibility = "visible";
            document.getElementById('lemma_textarea').focus();
          }
          else if(current_box.id == "multiword_box") {
            document.getElementById("right_body").style.visibility = "visible";
            document.getElementById("right_footer").style.visibility = "visible";
            document.getElementById('lemma_textarea').focus();
          }
          else {
            document.getElementById("right_body").style.visibility = "hidden";
            document.getElementById("right_footer").style.visibility = "hidden";
          }
        }
        left_column.onclick = function (event) {
          let target = event.target;
          if (target.className != 'box') return;

          selectBox(target);
        };

        document.getElementById('lemma_tag').oninput = setLemmaTagSize;
        setLemmaTagSize();

      }
    }
    xhttp.send(send_data);
  }

  httpRequest("POST", "retrieve_engword.php");
